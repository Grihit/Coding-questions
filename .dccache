{"d:/Competitive Coding/Miscellaneous/Airline Restrictions.cpp":[847,1632405009000,"1087fb83ab67b9425bc6b2d599bab2ddd6b85e2c506f0e1aa7d87151c7ba21ca"],"d:/Competitive Coding/Miscellaneous/AngryProfessor.cpp":[363,1632405009000,"f1eca309dac02be24343f0aee8106774e6d2d859bb166ac9814428956c134812"],"d:/Competitive Coding/Miscellaneous/Arranging coins.cpp":[275,1645585763353.2131,"8303d6fd4768ed43295a9e9391cb731f08ebf988ee3738840cf16029b3ce4cbe"],"d:/Competitive Coding/Miscellaneous/BeautifulDaysAtTheMovies.cpp":[402,1645587766473,"2a2fc4fb69987f5fbf7079fa984f36d94606468173f69bb49debd9276a6c72d8"],"d:/Competitive Coding/Miscellaneous/CatAndMouse.cpp":[373,1645588023596,"ddd4b861d46da8d9c395465b079afc0f1464526d28b53cb6db8e89391b4b516c"],"d:/Competitive Coding/Miscellaneous/ChefAndCard.cpp":[792,1645588035025,"35a61cfe02747caf59ced4caaf2b2c13fdbe00f1ba7e9569a9c7876bd9a9fbd1"],"d:/Competitive Coding/Miscellaneous/ChefAndStrings.cpp":[337,1645588044894,"eb079553b99fff979169f870b31a617e3732d931644296664e15434cc303a702"],"d:/Competitive Coding/Miscellaneous/Chocolate Feast.cpp":[497,1645588121019,"f5b43ff6b8300a77c1526df6e8e020120995b009ae72e4631f17e50e2d9a79e3"],"d:/Competitive Coding/Miscellaneous/CountingValleys.cpp":[484,1645588518850,"b3293dbc0497a30f41183dfe0d9933dd390b3b9c0ee62378cc148657681e20f5"],"d:/Competitive Coding/Miscellaneous/Covaxin vs Covishield.cpp":[756,1645588773260.9998,"0e445f32aa1575e4754c9941243ef3763bc7d92f355db3d9500953bf74e0b7b1"],"d:/Competitive Coding/Miscellaneous/Encryption.cpp":[447,1645589489972,"297d8b5deb199493b17c63cf76fab33b59fb197f6881dc128489c3449f4a1a22"],"d:/Competitive Coding/Miscellaneous/Extra long Factorials.cpp":[1677,1645589510322.0002,"b9eedb850d118cb93f583e342db0176386529e38fa95ab25727572502e9ae8a0"],"d:/Competitive Coding/Miscellaneous/Find Digits.cpp":[1359,1645589552931,"c7f86389ee914fd704b9396b9c1d30b69ac1addfddca75ae49fe05270a410f20"],"d:/Competitive Coding/Miscellaneous/Infix_to_Prefix.cpp":[1042,1645589652900,"137e65911a13540dcf67f1d65f1d3997c42c1d4862da56ff28052598dde79225"],"d:/Competitive Coding/Miscellaneous/Integer to Roman.cpp":[2295,1645589657585,"0c6fbc76eab9b15682bc6f0ac42d63ff7ea66c222deaf50721e3488460dfdc04"],"d:/Competitive Coding/Miscellaneous/Jerry Escapes.cpp":[348,1645589699547,"85f7a3b7676d0fa9cafabf4f30ea5c6cd940a60be996aec8c9f263963eb82193"],"d:/Competitive Coding/Miscellaneous/Long AND Subarray.cpp":[338,1645589718368,"0c3c6eeb848596a0961348a552285ec257ac3aea05253a91da11c083d557c570"],"d:/Competitive Coding/Miscellaneous/Longest Substring Without Repeating Characters.cpp":[874,1645589761998,"54a863ef8fa879dd74d1200ab11a03bf5ae5c9cbf5ef7abeb831885dcd08417d"],"d:/Competitive Coding/Miscellaneous/Modified Kaprekar Numbers.cpp":[921,1645590049830,"4ca6706f2cecb1adcbe81f58409e36deed63428b19a2f9fba1c73c9daf220da1"],"d:/Competitive Coding/Miscellaneous/String to Integer(atoi).cpp":[970,1645590274696,"704b3754df2f0bf52f044d7031b9feddac2ff954cb441501f92f172019ac91be"],"d:/Competitive Coding/Miscellaneous/Time in words.cpp":[1847,1645590285267.9998,"354f47e08c76db7fb9b4652e0ea4f300a82bcdebe0f872b8fd17e1599d43052f"],"d:/Competitive Coding/Miscellaneous/Travel Pass.cpp":[333,1645590294799,"95705e762276f42b56e8ae7a70f86e33dad633373751c59baf99fadc47a1b644"],"d:/Competitive Coding/Miscellaneous/UtopianTree.cpp":[369,1645590382700,"ecf0bec1e47062fb3090169ebb195e53cd4897ceabcf31ac0705053b8d1a7951"],"d:/Competitive Coding/Miscellaneous/ViralAdvertising.cpp":[273,1645590390105,"d90e0dd0817c7f467d3aa422c33276c162d9ed10b9af7918429fca2532cef774"],"d:/Competitive Coding/Data Structures/Binary Tree/Binary tree f.cpp":[963,1645587972385,"47fb46dfe86d564479332e7a63bf79316890a229c758f5c09f11624b0e632bf2"],"d:/Competitive Coding/Data Structures/Binary Tree/BST.cpp":[2033,1645587995891,"ef54a393706ed53624b781d4263acff8fe2b6c979ad43069263715c10cc09256"],"d:/Competitive Coding/Data Structures/Binary Tree/Construct BST from preorder array.cpp":[973,1645588182311,"5f763d67f67361fa78ce15d42bdeabde860eea7860753dac4289403e2842f5cc"],"d:/Competitive Coding/Data Structures/Linked List/Add two numbers.cpp":[1134,1645585763353.2131,"3de221d17b7ba581427e6b264e56f9a4a413d074b05d96a32a83fa44050ad9fd"],"d:/Competitive Coding/Data Structures/Linked List/Intersection of two Linked List.cpp":[989,1645589691489.0002,"80651674b69cfbb0ec93f0e012f0cdfb66972707d81bf225369d58111600e18e"],"d:/Competitive Coding/Data Structures/Linked List/Linked List Cycle 2.cpp":[1191,1645589691527,"c31a78e0867071b7805a171ca4f26e9e848f019d4eb2378a5b5f83fa14f82d19"],"d:/Competitive Coding/Data Structures/Linked List/Linked List Cycle.cpp":[768,1645589691625,"008f8a7e2cf2796eb8887ba35036396388956e10c3baf3abde3a209c758d0a7b"],"d:/Competitive Coding/Data Structures/Linked List/Linked List palindrome.cpp":[1072,1645589691687,"b141508ab0b11fe16133b5c9b2a5bc70e6209159d007cef9223889e71fe0ea5e"],"d:/Competitive Coding/Data Structures/Linked List/Remove Linked List Elements.cpp":[864,1645590199960,"06c27a03dede7a55800b2f289ad581263a0b53bce140ae5e6c319ea42d084d18"],"d:/Competitive Coding/Data Structures/Array or Vector/Accident problem.cpp":[984,1645585763353.2131,"9e91292ea9fb17f87216f258b200e471c5a587565f59d9359661555f7c0eec8e"],"d:/Competitive Coding/Data Structures/Array or Vector/AdaKing.cpp":[1312,1645585763353.2131,"325611cb355d70653f2880cfb1bbb71b22ac11dc73d958b157b964a0cd1b9252"],"d:/Competitive Coding/Data Structures/Array or Vector/Beautiful Triplets.cpp":[808,1645587750184,"c6882a892d0fef39051a723457646ca31b4f678d9abf88dc681db26985cf2381"],"d:/Competitive Coding/Data Structures/Array or Vector/Best Time to Buy and Sell Stock.cpp":[437,1645587796486.9998,"135fd3c333bb306c1792476be602f05d760198465907ba851ce9bfe3a56d421e"],"d:/Competitive Coding/Data Structures/Array or Vector/Circular Array Rotation.cpp":[376,1645588130430.0002,"cce35f43318cf2e89ebaaee7a1117929757d35344b02edce24c1594f4de83edd"],"d:/Competitive Coding/Data Structures/Array or Vector/Containers and balls.cpp":[965,1645588453461,"7ffd9ce576d0d03a6ca286cac9eaf7e986c5ae0efc889c80f6fbaf2503f1d402"],"d:/Competitive Coding/Data Structures/Array or Vector/DesignerPDFViewer.cpp":[441,1645588838999.0002,"17f64a95eda613238a921dc057da955d541da38307ba1809ca1250ba8f1644a0"],"d:/Competitive Coding/Data Structures/Array or Vector/ElectronicsShop.cpp":[586,1645589472527,"3c59744daba66a2d33ad6cb410b3362448b64932db4f6bf2f290c71141872aa2"],"d:/Competitive Coding/Data Structures/Array or Vector/HurdleRace.cpp":[313,1645589639762,"062c988672f5fe4f21166f888bafaa7c1133d792bb033807a7df88ca3421128a"],"d:/Competitive Coding/Data Structures/Array or Vector/Magic square.cpp":[1513,1645589881616,"5aa22e7f997ede81fd90d1b623afc4c522319408b7b81bd795764c758f325597"],"d:/Competitive Coding/Data Structures/Array or Vector/MaxSubArray.cpp":[511,1645589934578,"48891b8460f1cff2155766452c4f5f39b74758e930456736918e471d85294a64"],"d:/Competitive Coding/Data Structures/Array or Vector/Minimum Distances.cpp":[479,1645589985004,"b17b03677887cb9ef0ad73764a4a660be1d337f7b0c7978204ec082d78b83b67"],"d:/Competitive Coding/Data Structures/Array or Vector/MinStartValue.cpp":[419,1645590114082,"04a0c7a5cf1bd1d5563e6a5c875dde303f80fc842133bd4c39aaf7c7360a0f1b"],"d:/Competitive Coding/Data Structures/Array or Vector/MissingPoint.cpp":[993,1645590114377,"5875361ffc4cc2e1f5139ce726aa15f9579deb73dc2a6e198ed7963a3887b4d9"],"d:/Competitive Coding/Data Structures/Array or Vector/PickingNumbers.cpp":[495,1645590182802,"7bb7ec91b97b80cd9834e233ed5123d4824ca57e475ddfc61e901b905ce7c971"],"d:/Competitive Coding/Data Structures/Array or Vector/RemoveDuplicates.cpp":[176,1645590233592,"a7223f286489630d4885728242f6459ada671e4174afc83956970f97a56ebb9c"],"d:/Competitive Coding/Data Structures/Array or Vector/Sales by match.cpp":[443,1645590233933.0002,"199c303846240ca9de3fcea6e85d83ff335f830b0fc62f8eea917c326b3cffa5"],"d:/Competitive Coding/Data Structures/Array or Vector/Sequence Equation.cpp":[633,1645590314404,"45c009ee39d5fbc990ca355ffdd6e7a40c6771e63b230d782d4100eb82aa4308"],"d:/Competitive Coding/Data Structures/Array or Vector/Shuffling Parties.cpp":[608,1645590314529,"8f8c0de498e3830f1e0256c207115e3ce0870d3403560d17b08036da2ebfbf23"],"d:/Competitive Coding/Data Structures/Array or Vector/Two sum.cpp":[486,1645590361290,"b7b94bc343b5df88569d1039f5b4007d766ca1b10522d4629c98444fda8d7d74"],"d:/Competitive Coding/Data Structures/Array or Vector/XOR Equal.cpp":[812,1645590412763.0002,"6f6b54209346d1f45125a4d09d75989dc55cac4f6b76752ecd1cbee619eeeb02"],"d:/Competitive Coding/Data Structures/Queue/Circular_queue.cpp":[91,1645588137562,"91568ecee9c55dc16dbb7d3c24c2101338b58c9cb12342123a6e9f64839b157e"],"d:/Competitive Coding/Algorithms/2 Pointers/Move Zeroes.cpp":[348,1645590682021,"b811cdd3c4fe2085947aba156788abd17fb9b4c914b1073a537151328b0bd602"],"d:/Competitive Coding/Algorithms/2 Pointers/Rotate Array.cpp":[512,1645590640198,"e146837528ba3d850724c6e5bfc8448d2f09633426a80cdd6293b665040753de"],"d:/Competitive Coding/Algorithms/2 Pointers/Squares of Sorted Array.cpp":[999,1645590474835,"ee3b4b4437bb16c26e4917cd19a2d95e5213e404c14b7d77ec70f866a8a3da99"],"d:/Competitive Coding/Algorithms/2 Pointers/Two Sum - Input Array is Sorted.cpp":[600,1645590502566.9998,"eb0e0126383702a5f0749a43ce3a153526045203a1bf761240b993f310ed95b6"],"d:/Competitive Coding/Algorithms/Binary Search/Binary Search.cpp":[443,1645587978625,"6030a5b5a61cd188a7543d414b9dbcb64ade6512ffebc59c8e286ddd9be67802"],"d:/Competitive Coding/Algorithms/Binary Search/First Bad Version.cpp":[649,1645589569041,"91421a31c1da5074b4d94cf0bb922fd019173688021a0f7c58395d64e50cbbd0"],"d:/Competitive Coding/Algorithms/Binary Search/Guess Number Higher or Lower.cpp":[660,1645589595016,"4f46101b827c2ce6e80d9e09f7e4a6cab881d4d9c7ae1db3473e52263896cb25"],"d:/Competitive Coding/Algorithms/Binary Search/Search Insert Position.cpp":[456,1645590246887,"14e86c5a14ac23a955e6d82ec86881c8fca3ebc3b7c0213935ef1686be5bc2ea"],"d:/Competitive Coding/Algorithms/Dynamic Programming/Best Time to Buy and Sell Stock with Cooldown.cpp":[649,1645587783381.0002,"831322cd001c75e90d6ed65d2e953382ddf4ff5e264dd4c62ad6e9997bc78ec8"],"d:/Competitive Coding/Algorithms/Dynamic Programming/Buy and sell stock IV.cpp":[737,1645588004514,"e4c886807e8795b5a51be8b7beccb86c24b3387ec4602f3c02536b81048de6f6"],"d:/Competitive Coding/Algorithms/Dynamic Programming/CanJump.cpp":[1024,1645588010814,"8769176628a0518c77986630bfd5e99837f4d5c370b0d41d3b8ce25ed1cef9ca"],"d:/Competitive Coding/Algorithms/Dynamic Programming/CanSum.cpp":[992,1645588013201.9998,"f33bd8ebc0c8513641b0c081852bfcfd807c21bf78018c13c3c116e824822609"],"d:/Competitive Coding/Algorithms/Dynamic Programming/Climbing Stairs.cpp":[464,1645588150913.0002,"4a2a6a87ce774f7f6d13f9165e50e897e122234117d9a7e435e62a64f4526423"],"d:/Competitive Coding/Algorithms/Dynamic Programming/Coin Change.cpp":[1027,1645588164082,"5af66310a5496419913a1ac0b45345a97d7557951c589554ae9a3c749e201a54"],"d:/Competitive Coding/Algorithms/Dynamic Programming/Decode ways.cpp":[799,1645588802239.0002,"8af9e1a7427e0b9880ddf2d58cc7dffefebd05c8bc077385cbc8788c9f56f5bc"],"d:/Competitive Coding/Algorithms/Dynamic Programming/DeleteAndEarn.cpp":[884,1645588820174,"2971b87e8bd4936f937ba7179aee5df279f9daa4ec2c7351ea04d91ccd186de1"],"d:/Competitive Coding/Algorithms/Dynamic Programming/Fib_dp.cpp":[562,1645589527200,"beae0df3c1b96e61aa6116400dbee5619b5207a3e54d3b24e5e6c140d4a8640b"],"d:/Competitive Coding/Algorithms/Dynamic Programming/Grid walk.cpp":[953,1645589579311,"b6891f1c24dd23602108e33fee6cd6039a3dd3124a5b25a8cfdd9c7f92859a9a"],"d:/Competitive Coding/Algorithms/Dynamic Programming/House Robber.cpp":[716,1645589604905,"c84b89e0e7f287256db815a4c84849648d95a4067ed724df3045dfcb4b791365"],"d:/Competitive Coding/Algorithms/Dynamic Programming/HowSum.cpp":[1554,1645589617191,"5a191904cd34ab9195efd102b446c816d9c52c48b639912895035bbeb10dd5d2"],"d:/Competitive Coding/Algorithms/Dynamic Programming/Longest Common Subsequence.cpp":[828,1645589744572.0002,"4f012e360d4c55aeee565d091220fbe798daf5c32f1fdbc4d17a1ba4645ba3fc"],"d:/Competitive Coding/Algorithms/Dynamic Programming/Longest Increasing Subsequence.cpp":[905,1645589744616,"4ad13ced8480223914cabf71a8575be4f3a3db9e54006780caba246767ca9ce0"],"d:/Competitive Coding/Algorithms/Dynamic Programming/Maximum Score from Performing Multiplication Operations.cpp":[890,1645589903124.0002,"78ab20a5554a6cc45e31e88f8656777ec0a4b0654891e9ec098d9f927089275a"],"d:/Competitive Coding/Algorithms/Dynamic Programming/Min Path Sum.cpp":[654,1645589943125,"ae229952950c8dfa77fa9b797154478de472ef98f2353132f4c127def6d4a483"],"d:/Competitive Coding/Algorithms/Dynamic Programming/Minimum Falling Path Sum.cpp":[1127,1645590008718,"4389df17478f1d596a3e88735c8ed1117db7a652528e73278147ab9cdf9f022a"],"d:/Competitive Coding/Algorithms/Dynamic Programming/MinimumCost Climbing Stairs.cpp":[754,1645590008850,"11f321fbcfc31d56cd3cc41ce17fe1b409e8dcd050af8b189e8325e38d54d11e"],"d:/Competitive Coding/Algorithms/Dynamic Programming/Pascal's Triangle 2.cpp":[807,1645590163338.0002,"a4324a617dd9462ee98695316cc4a98d38e5973c1fcf482e0b97f2167bcbb360"],"d:/Competitive Coding/Algorithms/Dynamic Programming/Pascal's Triangle.cpp":[693,1645590163590,"8fb42ae4fbbef86c55b53a6fd2c7d931e304b6b7a63772c3e2da47699f14d9a4"],"d:/Competitive Coding/Algorithms/Dynamic Programming/Tribonacci number.cpp":[515,1645590337611.9998,"f4ce573ec66f5ad65494fd04c4ed184d3161dc4da6dfc1c9894d01f460bf38cb"],"d:/Competitive Coding/Algorithms/Dynamic Programming/Unique Paths 2.cpp":[1255,1645590434137,"13411f78bbb52f9f68c652778b5c32d4e13489040a1ab321b4bb10735922461f"],"d:/Competitive Coding/Algorithms/Dynamic Programming/Unique Paths.cpp":[703,1645590434586.9998,"46aa45921816d3874aef37926d2a35ff19fa9430e99cb1867d10f003536ebfdb"],"d:/Competitive Coding/Algorithms/Dynamic Programming/Word Break.cpp":[1120,1645590435025,"90bb0818bf63ddc7c9b1a6e017818ecc9a5aa4298d7420d2afd79a2ab946d56b"],"d:/Competitive Coding/Algorithms/Recursion/Container With Most Water.cpp":[813,1645588431326,"5a52191fcc4a312fd275ece7cc0e8732be4bf17b250288f5168e32c68e28dfea"],"d:\\Competitive Coding\\Miscellaneous\\Airline Restrictions.cpp":[847,1632405009000,"1087fb83ab67b9425bc6b2d599bab2ddd6b85e2c506f0e1aa7d87151c7ba21ca"],"d:\\Competitive Coding\\Miscellaneous\\AngryProfessor.cpp":[363,1632405009000,"f1eca309dac02be24343f0aee8106774e6d2d859bb166ac9814428956c134812"],"d:\\Competitive Coding\\Miscellaneous\\Arranging coins.cpp":[275,1645585763353.2131,"8303d6fd4768ed43295a9e9391cb731f08ebf988ee3738840cf16029b3ce4cbe"],"d:\\Competitive Coding\\Miscellaneous\\CatAndMouse.cpp":[373,1645588023596,"ddd4b861d46da8d9c395465b079afc0f1464526d28b53cb6db8e89391b4b516c"],"d:\\Competitive Coding\\Miscellaneous\\BeautifulDaysAtTheMovies.cpp":[402,1645587766473,"2a2fc4fb69987f5fbf7079fa984f36d94606468173f69bb49debd9276a6c72d8"],"d:\\Competitive Coding\\Miscellaneous\\ChefAndCard.cpp":[792,1645588035025,"35a61cfe02747caf59ced4caaf2b2c13fdbe00f1ba7e9569a9c7876bd9a9fbd1"],"d:\\Competitive Coding\\Miscellaneous\\ChefAndStrings.cpp":[337,1645588044894,"eb079553b99fff979169f870b31a617e3732d931644296664e15434cc303a702"],"d:\\Competitive Coding\\Miscellaneous\\Chocolate Feast.cpp":[497,1645588121019,"f5b43ff6b8300a77c1526df6e8e020120995b009ae72e4631f17e50e2d9a79e3"],"d:\\Competitive Coding\\Miscellaneous\\CountingValleys.cpp":[484,1645588518850,"b3293dbc0497a30f41183dfe0d9933dd390b3b9c0ee62378cc148657681e20f5"],"d:\\Competitive Coding\\Miscellaneous\\Covaxin vs Covishield.cpp":[756,1645588773260.9998,"0e445f32aa1575e4754c9941243ef3763bc7d92f355db3d9500953bf74e0b7b1"],"d:\\Competitive Coding\\Miscellaneous\\Encryption.cpp":[447,1645589489972,"297d8b5deb199493b17c63cf76fab33b59fb197f6881dc128489c3449f4a1a22"],"d:\\Competitive Coding\\Miscellaneous\\Extra long Factorials.cpp":[1677,1645589510322.0002,"b9eedb850d118cb93f583e342db0176386529e38fa95ab25727572502e9ae8a0"],"d:\\Competitive Coding\\Miscellaneous\\Find Digits.cpp":[1359,1645589552931,"c7f86389ee914fd704b9396b9c1d30b69ac1addfddca75ae49fe05270a410f20"],"d:\\Competitive Coding\\Miscellaneous\\Infix_to_Prefix.cpp":[1042,1645589652900,"137e65911a13540dcf67f1d65f1d3997c42c1d4862da56ff28052598dde79225"],"d:\\Competitive Coding\\Miscellaneous\\Integer to Roman.cpp":[2295,1645589657585,"0c6fbc76eab9b15682bc6f0ac42d63ff7ea66c222deaf50721e3488460dfdc04"],"d:\\Competitive Coding\\Miscellaneous\\Jerry Escapes.cpp":[348,1645589699547,"85f7a3b7676d0fa9cafabf4f30ea5c6cd940a60be996aec8c9f263963eb82193"],"d:\\Competitive Coding\\Miscellaneous\\Longest Substring Without Repeating Characters.cpp":[874,1645589761998,"54a863ef8fa879dd74d1200ab11a03bf5ae5c9cbf5ef7abeb831885dcd08417d"],"d:\\Competitive Coding\\Miscellaneous\\Long AND Subarray.cpp":[338,1645589718368,"0c3c6eeb848596a0961348a552285ec257ac3aea05253a91da11c083d557c570"],"d:\\Competitive Coding\\Miscellaneous\\Modified Kaprekar Numbers.cpp":[921,1645590049830,"4ca6706f2cecb1adcbe81f58409e36deed63428b19a2f9fba1c73c9daf220da1"],"d:\\Competitive Coding\\Miscellaneous\\String to Integer(atoi).cpp":[970,1645590274696,"704b3754df2f0bf52f044d7031b9feddac2ff954cb441501f92f172019ac91be"],"d:\\Competitive Coding\\Miscellaneous\\Time in words.cpp":[1847,1645590285267.9998,"354f47e08c76db7fb9b4652e0ea4f300a82bcdebe0f872b8fd17e1599d43052f"],"d:\\Competitive Coding\\Miscellaneous\\Travel Pass.cpp":[333,1645590294799,"95705e762276f42b56e8ae7a70f86e33dad633373751c59baf99fadc47a1b644"],"d:\\Competitive Coding\\Miscellaneous\\UtopianTree.cpp":[369,1645590382700,"ecf0bec1e47062fb3090169ebb195e53cd4897ceabcf31ac0705053b8d1a7951"],"d:\\Competitive Coding\\Miscellaneous\\ViralAdvertising.cpp":[273,1645590390105,"d90e0dd0817c7f467d3aa422c33276c162d9ed10b9af7918429fca2532cef774"],"d:\\Competitive Coding\\Data Structures\\Binary Tree\\Binary tree f.cpp":[963,1645587972385,"47fb46dfe86d564479332e7a63bf79316890a229c758f5c09f11624b0e632bf2"],"d:\\Competitive Coding\\Data Structures\\Binary Tree\\BST.cpp":[2033,1645587995891,"ef54a393706ed53624b781d4263acff8fe2b6c979ad43069263715c10cc09256"],"d:\\Competitive Coding\\Data Structures\\Binary Tree\\Construct BST from preorder array.cpp":[973,1645588182311,"5f763d67f67361fa78ce15d42bdeabde860eea7860753dac4289403e2842f5cc"],"d:\\Competitive Coding\\Data Structures\\Linked List\\Add two numbers.cpp":[1134,1645585763353.2131,"3de221d17b7ba581427e6b264e56f9a4a413d074b05d96a32a83fa44050ad9fd"],"d:\\Competitive Coding\\Data Structures\\Linked List\\Intersection of two Linked List.cpp":[989,1645589691489.0002,"80651674b69cfbb0ec93f0e012f0cdfb66972707d81bf225369d58111600e18e"],"d:\\Competitive Coding\\Data Structures\\Linked List\\Linked List Cycle 2.cpp":[1191,1645589691527,"c31a78e0867071b7805a171ca4f26e9e848f019d4eb2378a5b5f83fa14f82d19"],"d:\\Competitive Coding\\Data Structures\\Linked List\\Linked List Cycle.cpp":[768,1645589691625,"008f8a7e2cf2796eb8887ba35036396388956e10c3baf3abde3a209c758d0a7b"],"d:\\Competitive Coding\\Data Structures\\Linked List\\Linked List palindrome.cpp":[1763,1646033655165.1208,"3264980705aaf1b134556befda100d4c163d8d7b7a63e1f760f9f38be29ffff4"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\Accident problem.cpp":[984,1645585763353.2131,"9e91292ea9fb17f87216f258b200e471c5a587565f59d9359661555f7c0eec8e"],"d:\\Competitive Coding\\Data Structures\\Linked List\\Remove Linked List Elements.cpp":[864,1645590199960,"06c27a03dede7a55800b2f289ad581263a0b53bce140ae5e6c319ea42d084d18"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\AdaKing.cpp":[1312,1645585763353.2131,"325611cb355d70653f2880cfb1bbb71b22ac11dc73d958b157b964a0cd1b9252"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\Beautiful Triplets.cpp":[808,1645587750184,"c6882a892d0fef39051a723457646ca31b4f678d9abf88dc681db26985cf2381"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\Best Time to Buy and Sell Stock.cpp":[437,1645587796486.9998,"135fd3c333bb306c1792476be602f05d760198465907ba851ce9bfe3a56d421e"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\Circular Array Rotation.cpp":[376,1645588130430.0002,"cce35f43318cf2e89ebaaee7a1117929757d35344b02edce24c1594f4de83edd"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\Containers and balls.cpp":[965,1645588453461,"7ffd9ce576d0d03a6ca286cac9eaf7e986c5ae0efc889c80f6fbaf2503f1d402"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\DesignerPDFViewer.cpp":[441,1645588838999.0002,"17f64a95eda613238a921dc057da955d541da38307ba1809ca1250ba8f1644a0"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\ElectronicsShop.cpp":[586,1645589472527,"3c59744daba66a2d33ad6cb410b3362448b64932db4f6bf2f290c71141872aa2"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\Magic square.cpp":[1513,1645589881616,"5aa22e7f997ede81fd90d1b623afc4c522319408b7b81bd795764c758f325597"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\MaxSubArray.cpp":[511,1645589934578,"48891b8460f1cff2155766452c4f5f39b74758e930456736918e471d85294a64"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\Minimum Distances.cpp":[479,1645589985004,"b17b03677887cb9ef0ad73764a4a660be1d337f7b0c7978204ec082d78b83b67"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\HurdleRace.cpp":[313,1645589639762,"062c988672f5fe4f21166f888bafaa7c1133d792bb033807a7df88ca3421128a"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\MinStartValue.cpp":[419,1645590114082,"04a0c7a5cf1bd1d5563e6a5c875dde303f80fc842133bd4c39aaf7c7360a0f1b"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\MissingPoint.cpp":[993,1645590114377,"5875361ffc4cc2e1f5139ce726aa15f9579deb73dc2a6e198ed7963a3887b4d9"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\RemoveDuplicates.cpp":[176,1645590233592,"a7223f286489630d4885728242f6459ada671e4174afc83956970f97a56ebb9c"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\Sequence Equation.cpp":[633,1645590314404,"45c009ee39d5fbc990ca355ffdd6e7a40c6771e63b230d782d4100eb82aa4308"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\Sales by match.cpp":[443,1645590233933.0002,"199c303846240ca9de3fcea6e85d83ff335f830b0fc62f8eea917c326b3cffa5"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\Shuffling Parties.cpp":[608,1645590314529,"8f8c0de498e3830f1e0256c207115e3ce0870d3403560d17b08036da2ebfbf23"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\Two sum.cpp":[486,1645590361290,"b7b94bc343b5df88569d1039f5b4007d766ca1b10522d4629c98444fda8d7d74"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\XOR Equal.cpp":[812,1645590412763.0002,"6f6b54209346d1f45125a4d09d75989dc55cac4f6b76752ecd1cbee619eeeb02"],"d:\\Competitive Coding\\Data Structures\\Array or Vector\\PickingNumbers.cpp":[495,1645590182802,"7bb7ec91b97b80cd9834e233ed5123d4824ca57e475ddfc61e901b905ce7c971"],"d:\\Competitive Coding\\Data Structures\\Queue\\Circular_queue.cpp":[91,1645588137562,"91568ecee9c55dc16dbb7d3c24c2101338b58c9cb12342123a6e9f64839b157e"],"d:\\Competitive Coding\\Algorithms\\2 Pointers\\Move Zeroes.cpp":[348,1645590682021,"b811cdd3c4fe2085947aba156788abd17fb9b4c914b1073a537151328b0bd602"],"d:\\Competitive Coding\\Algorithms\\2 Pointers\\Rotate Array.cpp":[512,1645590640198,"e146837528ba3d850724c6e5bfc8448d2f09633426a80cdd6293b665040753de"],"d:\\Competitive Coding\\Algorithms\\2 Pointers\\Squares of Sorted Array.cpp":[999,1645590474835,"ee3b4b4437bb16c26e4917cd19a2d95e5213e404c14b7d77ec70f866a8a3da99"],"d:\\Competitive Coding\\Algorithms\\2 Pointers\\Two Sum - Input Array is Sorted.cpp":[600,1645590502566.9998,"eb0e0126383702a5f0749a43ce3a153526045203a1bf761240b993f310ed95b6"],"d:\\Competitive Coding\\Algorithms\\Binary Search\\Binary Search.cpp":[443,1645587978625,"6030a5b5a61cd188a7543d414b9dbcb64ade6512ffebc59c8e286ddd9be67802"],"d:\\Competitive Coding\\Algorithms\\Binary Search\\First Bad Version.cpp":[649,1645589569041,"91421a31c1da5074b4d94cf0bb922fd019173688021a0f7c58395d64e50cbbd0"],"d:\\Competitive Coding\\Algorithms\\Binary Search\\Guess Number Higher or Lower.cpp":[660,1645589595016,"4f46101b827c2ce6e80d9e09f7e4a6cab881d4d9c7ae1db3473e52263896cb25"],"d:\\Competitive Coding\\Algorithms\\Binary Search\\Search Insert Position.cpp":[456,1645590246887,"14e86c5a14ac23a955e6d82ec86881c8fca3ebc3b7c0213935ef1686be5bc2ea"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\Buy and sell stock IV.cpp":[737,1645588004514,"e4c886807e8795b5a51be8b7beccb86c24b3387ec4602f3c02536b81048de6f6"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\CanSum.cpp":[992,1645588013201.9998,"f33bd8ebc0c8513641b0c081852bfcfd807c21bf78018c13c3c116e824822609"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\Best Time to Buy and Sell Stock with Cooldown.cpp":[649,1645587783381.0002,"831322cd001c75e90d6ed65d2e953382ddf4ff5e264dd4c62ad6e9997bc78ec8"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\CanJump.cpp":[1024,1645588010814,"8769176628a0518c77986630bfd5e99837f4d5c370b0d41d3b8ce25ed1cef9ca"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\Climbing Stairs.cpp":[464,1645588150913.0002,"4a2a6a87ce774f7f6d13f9165e50e897e122234117d9a7e435e62a64f4526423"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\Coin Change.cpp":[1027,1645588164082,"5af66310a5496419913a1ac0b45345a97d7557951c589554ae9a3c749e201a54"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\DeleteAndEarn.cpp":[884,1645588820174,"2971b87e8bd4936f937ba7179aee5df279f9daa4ec2c7351ea04d91ccd186de1"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\Decode ways.cpp":[799,1645588802239.0002,"8af9e1a7427e0b9880ddf2d58cc7dffefebd05c8bc077385cbc8788c9f56f5bc"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\Grid walk.cpp":[953,1645589579311,"b6891f1c24dd23602108e33fee6cd6039a3dd3124a5b25a8cfdd9c7f92859a9a"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\Fib_dp.cpp":[562,1645589527200,"beae0df3c1b96e61aa6116400dbee5619b5207a3e54d3b24e5e6c140d4a8640b"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\House Robber.cpp":[716,1645589604905,"c84b89e0e7f287256db815a4c84849648d95a4067ed724df3045dfcb4b791365"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\HowSum.cpp":[1554,1645589617191,"5a191904cd34ab9195efd102b446c816d9c52c48b639912895035bbeb10dd5d2"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\Longest Common Subsequence.cpp":[828,1645589744572.0002,"4f012e360d4c55aeee565d091220fbe798daf5c32f1fdbc4d17a1ba4645ba3fc"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\Longest Increasing Subsequence.cpp":[905,1645589744616,"4ad13ced8480223914cabf71a8575be4f3a3db9e54006780caba246767ca9ce0"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\Maximum Score from Performing Multiplication Operations.cpp":[890,1645589903124.0002,"78ab20a5554a6cc45e31e88f8656777ec0a4b0654891e9ec098d9f927089275a"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\Min Path Sum.cpp":[654,1645589943125,"ae229952950c8dfa77fa9b797154478de472ef98f2353132f4c127def6d4a483"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\Minimum Falling Path Sum.cpp":[1127,1645590008718,"4389df17478f1d596a3e88735c8ed1117db7a652528e73278147ab9cdf9f022a"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\MinimumCost Climbing Stairs.cpp":[754,1645590008850,"11f321fbcfc31d56cd3cc41ce17fe1b409e8dcd050af8b189e8325e38d54d11e"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\Pascal's Triangle.cpp":[693,1645590163590,"8fb42ae4fbbef86c55b53a6fd2c7d931e304b6b7a63772c3e2da47699f14d9a4"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\Tribonacci number.cpp":[515,1645590337611.9998,"f4ce573ec66f5ad65494fd04c4ed184d3161dc4da6dfc1c9894d01f460bf38cb"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\Unique Paths.cpp":[703,1645590434586.9998,"46aa45921816d3874aef37926d2a35ff19fa9430e99cb1867d10f003536ebfdb"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\Unique Paths 2.cpp":[1255,1645590434137,"13411f78bbb52f9f68c652778b5c32d4e13489040a1ab321b4bb10735922461f"],"d:\\Competitive Coding\\Algorithms\\Recursion\\Container With Most Water.cpp":[813,1645588431326,"5a52191fcc4a312fd275ece7cc0e8732be4bf17b250288f5168e32c68e28dfea"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\Word Break.cpp":[1120,1645590435025,"90bb0818bf63ddc7c9b1a6e017818ecc9a5aa4298d7420d2afd79a2ab946d56b"],"d:\\Competitive Coding\\Algorithms\\Dynamic Programming\\Pascal's Triangle 2.cpp":[807,1645590163338.0002,"a4324a617dd9462ee98695316cc4a98d38e5973c1fcf482e0b97f2167bcbb360"],"d:\\Competitive Coding\\Data Structures\\Linked List\\Merge Two Sorted Lists.cpp":[1488,1646033655165.1208,"0640f57dde99ccf891a8a040deab36840ec8893243c76cb0d13dd945c9db02a8"],"d:\\Competitive Coding\\Data Structures\\Linked List\\Odd Even Linked List.cpp":[1159,1646033655166.118,"02a0505ef7ddf26bbaca7bd2c534099080589af6ec87cb69af3849530483eb8e"],"d:\\Competitive Coding\\Data Structures\\Linked List\\Reverse  a Linked List.cpp":[1107,1646033655167.1157,"1f1bdfdfa208bd541c1761bbc64a2f3e0e9b009f33d9752da4817a66b8584b55"],"d:\\Competitive Coding\\Data Structures\\Linked List\\Remove from the end.cpp":[928,1646033655166.118,"73479d4afb29f7ca64bfb63b35d80b25fba12a2da13976e5c8298bcd40005600"]}